[{"/home/baroudy/Projects/advancedLab/guc-portal/client/src/index.js":"1","/home/baroudy/Projects/advancedLab/guc-portal/client/src/reportWebVitals.js":"2","/home/baroudy/Projects/advancedLab/guc-portal/client/src/App.js":"3","/home/baroudy/Projects/advancedLab/guc-portal/client/src/Home.js":"4","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/GlobalState.js":"5","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/ViewStaff.js":"6","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/CourseCoverage.js":"7","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Login.js":"8","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/ViewRequests.js":"9","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/ViewProfile.jsx":"10","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/NavBar.js":"11","/home/baroudy/Projects/advancedLab/guc-portal/client/src/saveToLocalStorage.js":"12","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/requestsHomePage.js":"13","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/loginFetcher.js":"14","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/hodFetcher.js":"15","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Request.js":"16","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/StaffMember.js":"17","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/academicFetcher.js":"18","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Schedule.jsx":"19","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/RequestForm.jsx":"20","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/logoutFetcher.js":"21","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/staffFetcher.js":"22","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/getterFetcher.js":"23","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Cell.jsx":"24"},{"size":500,"mtime":1609653965999,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1609595120450,"results":"27","hashOfConfig":"26"},{"size":1097,"mtime":1610010928795,"results":"28","hashOfConfig":"26"},{"size":4194,"mtime":1610010928795,"results":"29","hashOfConfig":"26"},{"size":434,"mtime":1609658652173,"results":"30","hashOfConfig":"26"},{"size":3367,"mtime":1610010928795,"results":"31","hashOfConfig":"26"},{"size":1487,"mtime":1610010928795,"results":"32","hashOfConfig":"26"},{"size":2191,"mtime":1610034826637,"results":"33","hashOfConfig":"26"},{"size":2122,"mtime":1609957141977,"results":"34","hashOfConfig":"26"},{"size":1756,"mtime":1610013271509,"results":"35","hashOfConfig":"26"},{"size":5372,"mtime":1610010928795,"results":"36","hashOfConfig":"26"},{"size":696,"mtime":1609595120450,"results":"37","hashOfConfig":"26"},{"size":2013,"mtime":1610010928795,"results":"38","hashOfConfig":"26"},{"size":476,"mtime":1609659208376,"results":"39","hashOfConfig":"26"},{"size":5089,"mtime":1610010928795,"results":"40","hashOfConfig":"26"},{"size":8213,"mtime":1610010928795,"results":"41","hashOfConfig":"26"},{"size":9189,"mtime":1609957287528,"results":"42","hashOfConfig":"26"},{"size":4007,"mtime":1610031054771,"results":"43","hashOfConfig":"26"},{"size":2136,"mtime":1609845372796,"results":"44","hashOfConfig":"26"},{"size":7944,"mtime":1610030961088,"results":"45","hashOfConfig":"26"},{"size":458,"mtime":1610010928795,"results":"46","hashOfConfig":"26"},{"size":578,"mtime":1610010928795,"results":"47","hashOfConfig":"26"},{"size":3811,"mtime":1609940881536,"results":"48","hashOfConfig":"26"},{"size":426,"mtime":1609952006155,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"7bfwuq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/baroudy/Projects/advancedLab/guc-portal/client/src/index.js",[],["105","106"],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/reportWebVitals.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/App.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/Home.js",["107","108","109","110","111","112","113"],"import React, { component, useState } from \"react\";\nimport \"./Home.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport RequestsHome from \"./components/requestsHomePage\";\n\nlet x = 0;\nfunction Home() {\n  const openNav = () => {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n  };\n\n  const [notificationNum, setNotificationNum] = useState(x);\n  let classes = \"badge m-5 \";\n  classes += x === 0 ? \"badge-warning\" : \"badge-primary\";\n  const [redirect, setRedirect] = useState(null);\n\n  if (redirect) return <Redirect to={redirect} />;\n\n  return (\n    <div class=\"container-fluid\">\n      <NavBar />\n      <div class=\"col col-12 head containerIntro\">\n        <h1>Home</h1>\n        <span className=\"m-2\">Welcome</span>\n      </div>\n      <div class=\"container\">\n        <div class=\"row center\">\n          <div class=\"col-md-3 containerIntro\">\n            <button\n              type=\"button\"\n              href=\"#\"\n              onClick={() => {\n                setRedirect(\"/homePage/coursesCoverage\");\n              }}\n              class=\"btn\"\n            >\n              <span class=\"fas fa-book fa-3x\" href=\"#\"></span>\n            </button>\n            <p>Courses</p>\n            <br />\n            <span class=\"border-left border-dark icons\">description</span>\n          </div>\n\n          <div class=\"col-md-3 containerIntro\">\n            <button\n              type=\"button\"\n              href=\"#\"\n              onClick={() => {\n                setRedirect(\"/homePage/viewProfile\");\n              }}\n              class=\"btn\"\n            >\n              <span class=\"far fa-user fa-3x\"> </span>\n            </button>\n            <p>Profile</p>\n            <br />\n            <span class=\"border-left border-dark icons\">description</span>\n          </div>\n\n          <div class=\"col-md-3 containerIntro\">\n            <button type=\"button\" href=\"#\" onClick={openNav} class=\"btn\">\n              <span class=\"fa fa-industry fa-3x\"> </span>\n            </button>\n            <p>Inventory control</p>\n            <br />\n            <span class=\"border-left border-dark icons\">description</span>\n          </div>\n\n          <div class=\"col-md-3 containerIntro\">\n            <button\n              type=\"button\"\n              href=\"#\"\n              onClick={() => {\n                setRedirect(\"/homePage/staffMembers\");\n              }}\n              class=\"btn\"\n            >\n              <span class=\"fa fa-users fa-3x\"> </span>\n            </button>\n            <p>Staff members</p>\n            <br />\n            <span class=\"border-left border-dark icons\">description</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row center\">\n          <div class=\"col-md-4 containerIntro\">\n            <RequestsHome />\n          </div>\n\n          <div class=\"col-md-4 containerIntro\">\n            <div class=\"card text-white bg-dark \">\n              <div class=\"card-header\">Featured</div>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Special title treatment</h5>\n                <p class=\"card-text\">\n                  With supporting text below as a natural lead-in to additional\n                  content.\n                </p>\n                <a href=\"#\" class=\"btn btn-primary\">\n                  Go somewhere\n                </a>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-4 containerIntro\">\n            <div class=\"card text-white bg-dark \">\n              <div class=\"card-header\">Featured</div>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Special title treatment</h5>\n                <p class=\"card-text\">\n                  With supporting text below as a natural lead-in to additional\n                  content.\n                </p>\n                <a href=\"#\" class=\"btn btn-primary\">\n                  Go somewhere\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/GlobalState.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/ViewStaff.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/CourseCoverage.js",["114","115","116"],"import React, { useEffect, useState } from \"react\";\nimport { GetUser } from \"./GlobalState\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport StaffMember from \"./StaffMember\";\nimport NavBar from \"./NavBar\";\nimport { hodFetcher } from \"../API/hodFetcher\";\nimport Form from \"react-bootstrap/Form\";\n\nconst CourseCoverage = () => {\n  const { user } = GetUser();\n  const [courses, setCourses] = useState([]);\n\n  useEffect(() => {\n    const data = async () => {\n      try {\n        const res = await hodFetcher.viewCourseCoverage(user.token);\n        console.log(\"res\" + res);\n        setCourses(res);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    data();\n  }, []);\n  return (\n    <React.Fragment>\n      <NavBar />\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\n        Courses coverage\n      </h1>\n      <div class=\"col-7 offset-4\">\n        <table class=\"table\">\n          <thead>\n            <tr class=\"d-flex\">\n              <th class=\"col-2\"> Course name </th>\n              <th class=\"col-4\"> Course coverage </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {courses.map((obj) => {\n              return (\n                <tr class=\"d-flex\">\n                  <td class=\"col-2\">{obj.course}</td>\n                  <td class=\"col-4\">{obj.coverage}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default CourseCoverage;\n","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Login.js",["117"],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/ViewRequests.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/ViewProfile.jsx",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/NavBar.js",["118","119","120","121","122","123","124","125","126","127","128"],"import React, { component, useState } from \"react\";\nimport \"../Home\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport { logoutFetcher } from \"../API/logoutFetcher\";\nimport { staffFetcher } from \"../API/staffFetcher\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { GetUser } from \"./GlobalState\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction NavBar() {\n  const { user } = GetUser();\n  const [redirect, setRedirect] = useState(\"\");\n  const [showAccept, setShowAccept] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [passwordText, setPasswordText] = useState(\"Enter new password\");\n\n  const handleClose1 = () => setShowAccept(false);\n  const handleShow1 = () => setShowAccept(true);\n\n  const openNav = () => {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n  };\n  const closeNav = () => {\n    document.getElementById(\"mySidenav\").style.width = \"0px\";\n    document.getElementById(\"main\").style.marginLeft = \"0px\";\n  };\n  const logOut = async () => {\n    const l = await logoutFetcher.logout(user.token);\n    setRedirect(\"/\");\n  };\n  const resetPassword = async () => {\n    if (newPassword.length < 6)\n      return setPasswordText(\n        \"the password is less than 6 digits this is not possible\"\n      );\n\n    const p = await staffFetcher.resetPassword(newPassword, user.token);\n    setPasswordText(\"password updated successfully\");\n  };\n\n  if (redirect) return <Redirect to={Redirect} />;\n  return (\n    <div>\n      <div id=\"mySidenav\" class=\"sidenav\">\n        <button type=\"button\" class=\"btn btn-light closebtn\" onClick={closeNav}>\n          &times;\n        </button>\n        <a href=\"#\">About</a>\n        <a href=\"#\">Services</a>\n        <a href=\"#\">Clients</a>\n        <a href=\"#\">Contact</a>\n      </div>\n\n      <div id=\"main\" class=\"row container-fluid\">\n        <nav class=\"col-xl-12 navbar navbar-expand-lg navbar-dark bg-dark\">\n          <a class=\"navbar-brand\" href=\"#\">\n            {\" \"}\n            <button type=\"button\" href=\"#\" onClick={openNav} class=\"btn\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            GUC\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link active\"\n                  aria-current=\"page\"\n                  href=\"http://localhost:3001/homePage/\"\n                >\n                  Home\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n              <NavDropdown title=\"privacy\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">\n                  Update profile\n                </NavDropdown.Item>\n                <NavDropdown.Item onClick={handleShow1} href=\"#action/3.2\">\n                  Reset password\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">not yet</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">not yet</NavDropdown.Item>\n              </NavDropdown>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link disabled\"\n                  href=\"#\"\n                  tabindex=\"-1\"\n                  aria-disabled=\"true\"\n                >\n                  Disabled\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link active\"\n                  aria-current=\"page\"\n                  href=\"/\"\n                  onClick={logOut}\n                >\n                  Log out\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      <Modal\n        show={showAccept}\n        onHide={handleClose1}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Update password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            rows=\"3\"\n            type=\"password\"\n            placeholder=\"Enter new password\"\n            onChange={(event) => {\n              setNewPassword(event.target.value);\n            }}\n          />\n          <Form.Text className=\"text-muted\">{passwordText}</Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose1}>\n            Close\n          </Button>\n          <Button onClick={resetPassword} variant=\"primary\">\n            confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/home/baroudy/Projects/advancedLab/guc-portal/client/src/saveToLocalStorage.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/requestsHomePage.js",["129","130","131","132"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { GetUser } from \"./GlobalState\";\nimport { hodFetcher } from \"../API/hodFetcher\";\n\nconst RequestOnHome = () => {\n  const { user } = GetUser();\n  const [redirect, setRedirect] = useState(null);\n  const [pending, setPending] = useState(0);\n  const [accepted, setAccepted] = useState(0);\n  const [rejected, setRejected] = useState(0);\n\n  let classes = \"badge m-5 \";\n  classes += pending === 0 ? \"badge-warning\" : \"badge-primary\";\n\n  useEffect(() => {\n    const data = async () => {\n      let p = 0;\n      let a = 0;\n      let r = 0;\n      try {\n        const res = await hodFetcher.viewRequests(user.token);\n        for (const entry of res) {\n          if (entry.status === \"accepted\") a++;\n          if (entry.status === \"rejected\") r++;\n          if (entry.status === \"pending\") p++;\n        }\n        setPending(p);\n        setAccepted(a);\n        setRejected(r);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    data();\n  }, []);\n\n  const formatCount = () => {\n    return pending === 0 ? \"zero\" : pending;\n  };\n\n  if (redirect) return <Redirect to={redirect} />;\n  return (\n    <div class=\"card text-white bg-dark \">\n      <div class=\"card-header\">\n        Requests\n        <span className={classes}>{formatCount()}</span>\n      </div>\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Current requests records</h5>\n        <ul>\n          <li>You currently have {pending} pending requests</li>\n          <li>You currently have {accepted} accepted requests</li>\n          <li>You currently have {rejected} rejected requests</li>\n        </ul>\n        <a\n          href=\"#\"\n          class=\"btn btn-primary\"\n          onClick={() => {\n            {\n              setRedirect(\"/homePage/requests\");\n            }\n          }}\n        >\n          Go requests\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default RequestOnHome;\n","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/loginFetcher.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/hodFetcher.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Request.js",["133","134"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { getterFetcher } from \"../API/getterFetcher\";\nimport { GetUser } from \"./GlobalState\";\n\nconst Request = (props) => {\n  const { user } = GetUser();\n  const [showAccept, setShowAccept] = useState(false);\n  const [showReject, setShowReject] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [staff, setStaff] = useState(\"\");\n  const [course, setCourse] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleClose1 = () => setShowAccept(false);\n  const handleShow1 = () => setShowAccept(true);\n\n  const handleClose2 = () => setShowReject(false);\n  const handleShow2 = () => setShowReject(true);\n\n  useEffect(() => {\n    const staff = async () => {\n      const a = await getterFetcher.getStaffById(props.senderId, user.token);\n      console.log(a);\n      setStaff(a);\n    };\n    const courseAndLocation = async () => {\n      if (props.type === \"replacement\") {\n        const c = await getterFetcher.getCourseNameById(\n          props.replacement.courseId,\n          user.token\n        );\n        const l = await getterFetcher.getLocationNameById(\n          props.replacment.locationId,\n          user.token\n        );\n        setCourse(c);\n        setLocation(l);\n      }\n      if (props.type === \"slotLinking\") {\n        const c = await getterFetcher.getCourseNameById(\n          props.slotLinking.courseId,\n          user.token\n        );\n        const l = await getterFetcher.getLocationNameById(\n          props.slotLinking.locationId,\n          user.token\n        );\n        setCourse(c);\n        setLocation(l);\n      }\n    };\n    staff();\n    courseAndLocation();\n  }, []);\n\n  const getDay = (num) => {\n    switch (num) {\n      case 0:\n        return \"Sunday\";\n      case 1:\n        return \"Monday\";\n      case 2:\n        return \"Tuesday\";\n      case 3:\n        return \"Wednesday\";\n      case 4:\n        return \"Thursday\";\n      case 5:\n        return \"Friday\";\n      case 6:\n        return \"Saturday\";\n    }\n  };\n\n  const disable = () => {\n    if (props.status !== \"pending\") return true;\n    return false;\n  };\n\n  const renderReplacment = () => {\n    if (props.type === \"replacement\")\n      return (\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">{course}</li>\n          <li class=\"list-group-item\">{props.replacment.slotDate}</li>\n          <li class=\"list-group-item\">{props.replacment.slot}</li>\n          <li class=\"list-group-item\">{location}</li>\n          <li class=\"list-group-item\">{props.replacment.academicResponse}</li>\n        </ul>\n      );\n    if (props.type === \"slotLinking\")\n      return (\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">{course}</li>\n          <li class=\"list-group-item\">{getDay(props.replacment.weekDay)}</li>\n          <li class=\"list-group-item\">{props.replacment.slot}</li>\n          <li class=\"list-group-item\">{location}</li>\n        </ul>\n      );\n    return;\n  };\n\n  return (\n    <div>\n      <div style={{ marginTop: 15 }} className=\"container row\">\n        <div className=\"col-xl-10 offset-3\">\n          <Accordion defaultActiveKey=\"1\">\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                <span>\n                  {staff.name}({staff.id})\n                </span>\n                <span style={{ paddingInline: 300 }}>{props.type}</span>\n                <span>{props.status}</span>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <dl class=\"row\">\n                    {props.type === \"sick\" ||\n                      props.type === \"maternity\" ||\n                      (props.type === \"accidental\" && (\n                        <React.Fragment>\n                          <dt class=\"col-sm-3\">Target day</dt>\n                          <dd class=\"col-sm-9\">{props.targetDay}</dd>\n                        </React.Fragment>\n                      ))}\n\n                    {props.type === \"changeDayOff\" && (\n                      <React.Fragment>\n                        <dt class=\"col-sm-3\">New day off</dt>\n                        <dd class=\"col-sm-9\">{getDay(props.newDayOff)}</dd>\n                      </React.Fragment>\n                    )}\n\n                    <dt class=\"col-sm-3\">Issue date</dt>\n                    <dd class=\"col-sm-9\">{props.issueDate}</dd>\n\n                    {props.type === \"replacement\" ||\n                      (props.type === \"slotLinking\" && (\n                        <React.Fragment>\n                          <dt class=\"col-sm-3\">{props.type}</dt>\n                          <dd class=\"col-sm-9\">{renderReplacment()}</dd>\n                        </React.Fragment>\n                      ))}\n\n                    {props.type === \"compensation\" && (\n                      <React.Fragment>\n                        <dt class=\"col-sm-3\">Compensated</dt>\n                        <dd class=\"col-sm-9\">{props.compensated.type}</dd>\n                      </React.Fragment>\n                    )}\n                    <dt class=\"col-sm-3\">sender comment</dt>\n                    <dd class=\"col-sm-9\">{props.senderComment}</dd>\n                  </dl>\n                  <Button\n                    className=\"col col-6\"\n                    variant=\"light\"\n                    onClick={handleShow1}\n                    disabled={disable()}\n                  >\n                    Accepct request\n                  </Button>\n                  <Button\n                    className=\"col col-6\"\n                    variant=\"light\"\n                    onClick={handleShow2}\n                    disabled={disable()}\n                  >\n                    Reject request\n                  </Button>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </div>\n      </div>\n      <Modal\n        show={showAccept}\n        onHide={handleClose1}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Accept Request</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            onChange={(event) => {\n              setComment(event.target.value);\n            }}\n            rows=\"3\"\n            type=\"comment\"\n            placeholder=\"Enter comment\"\n          />\n          <Form.Text className=\"text-muted\">\n            Enter message to sender if you want\n          </Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose1}>\n            Close\n          </Button>\n          <Button\n            onClick={() => {\n              setShowAccept(false);\n              props.handleAccept(props._id, comment);\n            }}\n            variant=\"primary\"\n          >\n            Accept\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showReject}\n        onHide={handleClose2}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Reject request</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            onChange={(event) => {\n              setComment(event.target.value);\n            }}\n            rows=\"3\"\n            type=\"comment\"\n            placeholder=\"Enter comment\"\n          />\n          <Form.Text className=\"text-muted\">\n            Enter message to sender if you want\n          </Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose2}>\n            Close\n          </Button>\n          <Button\n            onClick={() => {\n              setShowReject(false);\n              props.handleReject(props._id, comment);\n            }}\n            variant=\"primary\"\n          >\n            Reject\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\nexport default Request;\n","/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/StaffMember.js",["135","136"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { getterFetcher } from \"../API/getterFetcher\";\nimport { GetUser } from \"./GlobalState\";\n\nconst ViewStaff = (props) => {\n  const { user } = GetUser();\n  const [showAdd, setShowAdd] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [course, setCourse] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [courses, setCourses] = useState([]);\n  const [newStaff, setNewStaff] = useState(\"\");\n  const [office, setOffice] = useState(\"\");\n  const [dayOff, setDayOff] = useState(\"\");\n\n  const handleClose1 = () => setShowAdd(false);\n  const handleShow1 = () => setShowAdd(true);\n\n  const handleClose2 = () => setShowDelete(false);\n  const handleShow2 = () => setShowDelete(true);\n\n  const handleClose3 = () => setShowUpdate(false);\n  const handleShow3 = () => setShowUpdate(true);\n\n  const disCourses = (course, position) => {\n    if (props.courses.length === 0) return <span>no courses </span>;\n    else\n      return (\n        <ul class=\"list-group list-group-horizontal\">\n          <li class=\"list-group-item\">{course}</li>\n          <li class=\"list-group-item\">{position}</li>{\" \"}\n        </ul>\n      );\n  };\n\n  useEffect(() => {\n    const courseName = async (arr) => {\n      let coursesNames = [];\n      for (var j = 0; j < props.courses.length; j++) {\n        const c = await getterFetcher.getCourseNameById(\n          props.courses[j].courseId,\n          user.token\n        );\n        coursesNames.push({\n          course: c,\n          position: props.courses[j].position,\n        });\n      }\n      setCourses(coursesNames);\n      return coursesNames;\n    };\n\n    const officeName = async () => {\n      console.log(\"office  \" + props.office);\n      const l = await getterFetcher.getLocationNameById(\n        props.office,\n        user.token\n      );\n      console.log(l);\n      setOffice(l);\n    };\n\n    const dayOffFun = async () => {\n      const d = await props.handleDayOff(props.id);\n      setDayOff(d);\n    };\n    dayOffFun();\n    courseName();\n    officeName();\n  }, [props.courses]);\n\n  const getDay = (num) => {\n    switch (num) {\n      case 0:\n        return \"Sunday\";\n      case 1:\n        return \"Monday\";\n      case 2:\n        return \"Tuesday\";\n      case 3:\n        return \"Wednesday\";\n      case 4:\n        return \"Thursday\";\n      case 5:\n        return \"Friday\";\n      case 6:\n        return \"Saturday\";\n    }\n  };\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Day Off</Popover.Title>\n      <Popover.Content>\n        this Staff member days off are Friday and {getDay(dayOff)}\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <div>\n      <div style={{ marginTop: 15 }} className=\"container row\">\n        <div className=\"col-xl-10 offset-3\">\n          <Accordion defaultActiveKey=\"1\">\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                <span>{props.name}</span>\n                <span style={{ paddingInline: 300 }}>{props.id}</span>\n                <span style={{ paddingInline: 0 }}>props.type</span>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <dl class=\"row\">\n                    <dt class=\"col-sm-3\">e-mail</dt>\n                    <dd class=\"col-sm-9\">{props.email}</dd>\n\n                    <dt class=\"col-sm-3\">salary</dt>\n                    <dd class=\"col-sm-9\">{props.salary}</dd>\n\n                    <dt class=\"col-sm-3\">Courses</dt>\n                    <dd class=\"col-sm-9\">\n                      {courses && Array.isArray(courses)\n                        ? courses.map((item) => {\n                            return disCourses(item.course, item.position);\n                          })\n                        : []}\n                    </dd>\n\n                    <dt class=\"col-sm-3 text-truncate\">Office location</dt>\n                    <dd class=\"col-sm-9\">{office.name}</dd>\n                  </dl>\n                  <Button\n                    className=\"col col-3\"\n                    variant=\"light\"\n                    onClick={handleShow1}\n                  >\n                    Add course\n                  </Button>\n                  <Button\n                    className=\"col col-3\"\n                    variant=\"light\"\n                    onClick={handleShow2}\n                  >\n                    Delete course\n                  </Button>\n                  <Button\n                    className=\"col col-3\"\n                    variant=\"light\"\n                    onClick={handleShow3}\n                  >\n                    update course\n                  </Button>\n                  <OverlayTrigger\n                    rootClose={true}\n                    trigger=\"click\"\n                    placement=\"top\"\n                    overlay={popover}\n                  >\n                    <Button className=\"col col-3\" variant=\"success\">\n                      Click me to see day off\n                    </Button>\n                  </OverlayTrigger>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </div>\n      </div>\n      <Modal\n        show={showAdd}\n        onHide={handleClose1}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>add Course</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            onChange={(event) => {\n              setCourse(event.target.value);\n            }}\n            type=\"course\"\n            placeholder=\"Enter course\"\n          />\n          <Form.Text className=\"text-muted\">\n            Enter the exact course name.\n          </Form.Text>\n          <Form.Control\n            onChange={(event) => {\n              setType(event.target.value);\n            }}\n            type=\"type\"\n            placeholder=\"Enter type\"\n          />\n          <Form.Text className=\"text-muted\">\n            enter \"instructor\" or \"academic\"\n          </Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose1}>\n            Close\n          </Button>\n          <Button\n            onClick={() => props.handleAdd(course, props.id, type)}\n            variant=\"primary\"\n          >\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showDelete}\n        onHide={handleClose2}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Course</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            onChange={(event) => {\n              setCourse(event.target.value);\n            }}\n            type=\"course\"\n            placeholder=\"Enter course\"\n          />\n          <Form.Text className=\"text-muted\">\n            Enter the exact course name.\n          </Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose2}>\n            Close\n          </Button>\n          <Button\n            onClick={() => {\n              props.handleDelete(course, props.id);\n              setCourse(\"\");\n            }}\n            variant=\"primary\"\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={showUpdate}\n        onHide={handleClose3}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>update Course</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            onChange={(event) => {\n              setCourse(event.target.value);\n            }}\n            type=\"course\"\n            placeholder=\"Enter course\"\n          />\n          <Form.Text className=\"text-muted\">\n            Enter the exact course name.\n          </Form.Text>\n          <Form.Control\n            onChange={(event) => {\n              setNewStaff(event.target.value);\n            }}\n            type=\"course\"\n            placeholder=\"Enter new staff member\"\n          />\n          <Form.Text className=\"text-muted\">\n            Enter the new staff member to swap courses.\n          </Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose3}>\n            Close\n          </Button>\n          <Button\n            onClick={() => {\n              props.handleUpdate(course, props.id, newStaff);\n              setCourse(\"\");\n            }}\n            variant=\"primary\"\n          >\n            update\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ViewStaff;\n","/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/academicFetcher.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Schedule.jsx",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/RequestForm.jsx",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/logoutFetcher.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/staffFetcher.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/API/getterFetcher.js",[],"/home/baroudy/Projects/advancedLab/guc-portal/client/src/components/Cell.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"145","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"146","line":15,"column":10,"nodeType":"143","messageId":"144","endLine":15,"endColumn":25},{"ruleId":"141","severity":1,"message":"147","line":15,"column":27,"nodeType":"143","messageId":"144","endLine":15,"endColumn":45},{"ruleId":"141","severity":1,"message":"148","line":17,"column":3,"nodeType":"143","messageId":"144","endLine":17,"endColumn":10},{"ruleId":"149","severity":1,"message":"150","line":104,"column":17,"nodeType":"151","endLine":104,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":120,"column":17,"nodeType":"151","endLine":120,"endColumn":53},{"ruleId":"141","severity":1,"message":"152","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":19},{"ruleId":"141","severity":1,"message":"153","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":24,"column":6,"nodeType":"156","endLine":24,"endColumn":8,"suggestions":"157"},{"ruleId":"141","severity":1,"message":"158","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"145","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":14},{"ruleId":"141","severity":1,"message":"159","line":32,"column":11,"nodeType":"143","messageId":"144","endLine":32,"endColumn":12},{"ruleId":"141","severity":1,"message":"160","line":41,"column":11,"nodeType":"143","messageId":"144","endLine":41,"endColumn":12},{"ruleId":"149","severity":1,"message":"150","line":52,"column":9,"nodeType":"151","endLine":52,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":53,"column":9,"nodeType":"151","endLine":53,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":54,"column":9,"nodeType":"151","endLine":54,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":55,"column":9,"nodeType":"151","endLine":55,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":60,"column":11,"nodeType":"151","endLine":60,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":90,"column":17,"nodeType":"151","endLine":90,"endColumn":46},{"ruleId":"149","severity":1,"message":"150","line":106,"column":17,"nodeType":"151","endLine":111,"endColumn":18},{"ruleId":"141","severity":1,"message":"145","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":37,"column":6,"nodeType":"156","endLine":37,"endColumn":8,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"150","line":57,"column":9,"nodeType":"151","endLine":65,"endColumn":10},{"ruleId":"162","severity":1,"message":"163","line":61,"column":13,"nodeType":"164","messageId":"165","endLine":63,"endColumn":14},{"ruleId":"154","severity":1,"message":"166","line":60,"column":6,"nodeType":"156","endLine":60,"endColumn":8,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":63,"column":5,"nodeType":"170","messageId":"171","endLine":78,"endColumn":6},{"ruleId":"154","severity":1,"message":"172","line":79,"column":6,"nodeType":"156","endLine":79,"endColumn":21,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"169","line":82,"column":5,"nodeType":"170","messageId":"171","endLine":97,"endColumn":6},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'notificationNum' is assigned a value but never used.","'setNotificationNum' is assigned a value but never used.","'classes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'StaffMember' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'hodFetcher' is defined but never used.","'l' is assigned a value but never used.","'p' is assigned a value but never used.",["177"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'props.replacement.courseId', 'props.replacment.locationId', 'props.senderId', 'props.slotLinking.courseId', 'props.slotLinking.locationId', 'props.type', and 'user.token'. Either include them or remove the dependency array.",["178"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'props' and 'user.token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"180","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [user.token]",{"range":"187","text":"188"},{"range":"189","text":"188"},"Update the dependencies array to be: [props.replacement.courseId, props.replacment.locationId, props.senderId, props.slotLinking.courseId, props.slotLinking.locationId, props.type, user.token]",{"range":"190","text":"191"},"Update the dependencies array to be: [props, props.courses, user.token]",{"range":"192","text":"193"},[681,683],"[user.token]",[1097,1099],[1947,1949],"[props.replacement.courseId, props.replacment.locationId, props.senderId, props.slotLinking.courseId, props.slotLinking.locationId, props.type, user.token]",[2506,2521],"[props, props.courses, user.token]"]