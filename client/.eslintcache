[{"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\index.js":"1","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\App.js":"2","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\HrHome.js":"4","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\HodHome.js":"5","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\StaffHome.js":"6","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\GlobalState.js":"7","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\CourseCoverage.js":"8","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Login.js":"9","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\ViewRequests.js":"10","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\NavBar.js":"11","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\requestsHomePage.js":"12","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\saveToLocalStorage.js":"13","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\StaffMember.js":"14","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\hodFetcher.js":"15","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\loginFetcher.js":"16","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\academicFetcher.js":"17","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\RequestForm.jsx":"18","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Schedule.jsx":"19","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\logoutFetcher.js":"20","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\staffFetcher.js":"21","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\getterFetcher.js":"22","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Cell.jsx":"23","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrStaffMember.js":"24","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\hrFetcher.js":"25","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrStaffMemberTemp.js":"26","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrLocation.js":"27","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\AttendanceRecord.jsx":"28","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Record.jsx":"29","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrLocationTemp.js":"30","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrDepartment.js":"31","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrFaculty.js":"32","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrDepartmentTemp.js":"33","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrCourse.js":"34","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrCourseTemp.js":"35","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Profile.jsx":"36","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\UpdateProfile.jsx":"37","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrFacultyTemp.js":"38","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\AcademicHome.jsx":"39","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Request.js":"40","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\ViewStaff.js":"41"},{"size":517,"mtime":1609712887476,"results":"42","hashOfConfig":"43"},{"size":1940,"mtime":1610147521937,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1609619282737,"results":"45","hashOfConfig":"43"},{"size":2900,"mtime":1610106452489,"results":"46","hashOfConfig":"43"},{"size":2381,"mtime":1610147521941,"results":"47","hashOfConfig":"43"},{"size":6922,"mtime":1610130874535,"results":"48","hashOfConfig":"43"},{"size":450,"mtime":1609712887459,"results":"49","hashOfConfig":"43"},{"size":1542,"mtime":1610018812652,"results":"50","hashOfConfig":"43"},{"size":5017,"mtime":1610147521947,"results":"51","hashOfConfig":"43"},{"size":2207,"mtime":1610147523551,"results":"52","hashOfConfig":"43"},{"size":6776,"mtime":1610147521951,"results":"53","hashOfConfig":"43"},{"size":2124,"mtime":1610147525057,"results":"54","hashOfConfig":"43"},{"size":720,"mtime":1609619282738,"results":"55","hashOfConfig":"43"},{"size":11350,"mtime":1610147523547,"results":"56","hashOfConfig":"43"},{"size":5280,"mtime":1610018812647,"results":"57","hashOfConfig":"43"},{"size":497,"mtime":1609712887450,"results":"58","hashOfConfig":"43"},{"size":4191,"mtime":1610043630830,"results":"59","hashOfConfig":"43"},{"size":8258,"mtime":1610110620317,"results":"60","hashOfConfig":"43"},{"size":2222,"mtime":1610018812655,"results":"61","hashOfConfig":"43"},{"size":478,"mtime":1610018812648,"results":"62","hashOfConfig":"43"},{"size":3607,"mtime":1610130874510,"results":"63","hashOfConfig":"43"},{"size":4820,"mtime":1610130874589,"results":"64","hashOfConfig":"43"},{"size":443,"mtime":1610018812651,"results":"65","hashOfConfig":"43"},{"size":5675,"mtime":1610138068310,"results":"66","hashOfConfig":"43"},{"size":12565,"mtime":1610145534009,"results":"67","hashOfConfig":"43"},{"size":4454,"mtime":1610139949556,"results":"68","hashOfConfig":"43"},{"size":4608,"mtime":1610146926007,"results":"69","hashOfConfig":"43"},{"size":1585,"mtime":1610097350226,"results":"70","hashOfConfig":"43"},{"size":1030,"mtime":1610110620316,"results":"71","hashOfConfig":"43"},{"size":4266,"mtime":1610147341146,"results":"72","hashOfConfig":"43"},{"size":3968,"mtime":1610142788707,"results":"73","hashOfConfig":"43"},{"size":3537,"mtime":1610144995237,"results":"74","hashOfConfig":"43"},{"size":3804,"mtime":1610144462958,"results":"75","hashOfConfig":"43"},{"size":3867,"mtime":1610140477700,"results":"76","hashOfConfig":"43"},{"size":3645,"mtime":1610140220658,"results":"77","hashOfConfig":"43"},{"size":2573,"mtime":1610130874545,"results":"78","hashOfConfig":"43"},{"size":2095,"mtime":1610130874549,"results":"79","hashOfConfig":"43"},{"size":3296,"mtime":1610144737722,"results":"80","hashOfConfig":"43"},{"size":3348,"mtime":1610147521933,"results":"81","hashOfConfig":"43"},{"size":8700,"mtime":1610147523541,"results":"82","hashOfConfig":"43"},{"size":4870,"mtime":1610147525054,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"177ddx7",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\index.js",[],["185","186"],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\App.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\HrHome.js",["187","188","189","190"],"import NavBar from \"./components/NavBar\";\r\nimport React, { component, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n\r\nconst HrHome = () => {\r\n  \r\n  const [redirect,setRedirect ]=useState(null)\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n\r\n  const openNav = () => {\r\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <NavBar />\r\n      <div class=\"row center offset-1\">\r\n          <div class=\"col-md-2 containerIntro\">\r\n          <button onClick={()=>setRedirect(\"/hr/Locations\")}\r\n              type=\"button\"\r\n              href=\"/hr/Locations\"\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"fas fa-book fa-3x\" href=\"#\"></span>\r\n            </button>\r\n            <p>Locations</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-2 containerIntro\">\r\n          <button onClick={()=>setRedirect(\"/hr/Faculties\")}\r\n              type=\"button\"\r\n              href=\"/hr/Faculties\"\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"far fa-user fa-3x\"> </span>\r\n            </button>\r\n            <p>Faculties</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-2 containerIntro\">\r\n          <button onClick={()=>setRedirect(\"/hr/Departments\")}\r\n              type=\"button\"\r\n              href=\"/hr/Departments\"\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"far fa-user fa-3x\"> </span>\r\n            </button>\r\n            <p>Departments</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-2 containerIntro\">\r\n          <button onClick={()=>setRedirect(\"/hr/Courses\")}\r\n              type=\"button\"\r\n              href=\"/hr/Courses\"\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"fa fa-industry fa-3x\"> </span>\r\n            </button>\r\n            <p>Courses</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-2 containerIntro\">\r\n            <button onClick={()=>setRedirect(\"/hr/StaffMembers\")}\r\n              type=\"button\"\r\n              href=\"/hr/StaffMembers\"\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"fa fa-users fa-3x\"> </span>\r\n            </button>\r\n            <p>Staff members</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n        </div>\r\n    </div>\r\n   \r\n  )\r\n  return <NavBar />;\r\n};\r\nexport default HrHome;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\HodHome.js",["191","192","193","194","195","196","197"],"import React, { component, useState } from \"react\";\r\nimport \"./hodHome.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport RequestsHome from \"./components/requestsHomePage\";\r\n\r\nlet x = 0;\r\nfunction HodHome() {\r\n  const openNav = () => {\r\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\r\n  };\r\n\r\n  const [notificationNum, setNotificationNum] = useState(x);\r\n  let classes = \"badge m-5 \";\r\n  classes += x === 0 ? \"badge-warning\" : \"badge-primary\";\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <div class=\"container-fluid\">\r\n      <NavBar />\r\n      <div class=\"col col-12 head containerIntro\">\r\n        <h1>Home</h1>\r\n        <span className=\"m-2\">Welcome</span>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row center\">\r\n          <div class=\"col-md-3 containerIntro\">\r\n            <button\r\n              type=\"button\"\r\n              href=\"#\"\r\n              onClick={() => {\r\n                setRedirect(\"/homePage/coursesCoverage\");\r\n              }}\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"fas fa-book fa-3x\" href=\"#\"></span>\r\n            </button>\r\n            <p>Courses</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 containerIntro\">\r\n            <button\r\n              type=\"button\"\r\n              href=\"#\"\r\n              onClick={() => {\r\n                setRedirect(\"/homePage/viewProfile\");\r\n              }}\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"far fa-user fa-3x\"> </span>\r\n            </button>\r\n            <p>Profile</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 containerIntro\">\r\n            <button type=\"button\" href=\"#\" onClick={openNav} class=\"btn\">\r\n              <span class=\"fa fa-industry fa-3x\"> </span>\r\n            </button>\r\n            <p>Inventory control</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 containerIntro\">\r\n            <button\r\n              type=\"button\"\r\n              href=\"#\"\r\n              onClick={() => {\r\n                setRedirect(\"/homePage/staffMembers\");\r\n              }}\r\n              class=\"btn\"\r\n            >\r\n              <span class=\"fa fa-users fa-3x\"> </span>\r\n            </button>\r\n            <p>Staff members</p>\r\n            <br />\r\n            <span class=\"border-left border-dark icons\">description</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row center\">\r\n          <div class=\"col-md-4 containerIntro\">\r\n            <RequestsHome />\r\n          </div>\r\n\r\n          <div class=\"col-md-4 containerIntro\">\r\n            <div class=\"card text-white bg-dark \">\r\n              <div class=\"card-header\">Featured</div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Special title treatment</h5>\r\n                <p class=\"card-text\">\r\n                  With supporting text below as a natural lead-in to additional\r\n                  content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 containerIntro\">\r\n            <div class=\"card text-white bg-dark \">\r\n              <div class=\"card-header\">Featured</div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Special title treatment</h5>\r\n                <p class=\"card-text\">\r\n                  With supporting text below as a natural lead-in to additional\r\n                  content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HodHome;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\StaffHome.js",["198"],"import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { GetUser } from \"./components/GlobalState\";\r\nimport { staffFetcher } from \"./API/staffFetcher\";\r\nimport AttendanceRecord from \"./components/AttendanceRecord\";\r\nimport Profile from \"./components/Profile\";\r\n\r\nconst StaffHome = () => {\r\n\tconst { user } = GetUser();\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [showA, setShowA] = useState(false);\r\n\tconst [showB, setShowB] = useState(false);\r\n\tconst [showC, setShowC] = useState(false);\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [missingHours, setMissingHours] = useState(0);\r\n\tconst [missingDays, setMissingDays] = useState(0);\r\n\tconst [variant, setVariant] = useState(\"success\");\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [profile, setProfile] = useState(null);\r\n\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleCloseA = () => setShowA(false);\r\n\tconst handleCloseB = () => setShowB(false);\r\n\tconst handleCloseC = () => setShowC(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst handleShowA = () => setShowA(true);\r\n\tconst handleShowB = () => setShowB(true);\r\n\tconst handleShowC = () => setShowC(true);\r\n\r\n\tconst signIn = async () => {\r\n\t\tconst data = await staffFetcher.signIn(user.token);\r\n\t\tconsole.log(data);\r\n\t\tsetMessage(data.message);\r\n\t\tsetVariant(data.variant);\r\n\t\tsetShowAlert(true);\r\n\t};\r\n\r\n\tconst signOut = async () => {\r\n\t\tconst data = await staffFetcher.signOut(user.token);\r\n\t\tsetMessage(data.message);\r\n\t\tsetVariant(data.variant);\r\n\t\tsetShowAlert(true);\r\n\t};\r\n\r\n\tconst showMissingDays = async () => {\r\n\t\tconst data = await staffFetcher.missingDays(user.token);\r\n\t\tsetMissingDays(data);\r\n\t\thandleShowA();\r\n\t};\r\n\r\n\tconst showMissingHours = async () => {\r\n\t\tconst data = await staffFetcher.missingHours(user.token);\r\n\t\tsetMissingHours(data);\r\n\t\thandleShowB();\r\n\t};\r\n\r\n\tconst showProfile = async () => {\r\n    const data = await staffFetcher.viewProfile(user.token);\r\n\t\tsetProfile(data);\r\n    handleShowC();\r\n  };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NavBar />\r\n\t\t\t<Alert\r\n\t\t\t\tclass=\".col-6\"\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tshow={showAlert}\r\n\t\t\t\tonClose={() => setShowAlert(false)}\r\n\t\t\t\tdismissible\r\n\t\t\t>\r\n\t\t\t\t{message}\r\n\t\t\t</Alert>\r\n\r\n\t\t\t<Modal size=\"lg\" show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Attendance Records</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<AttendanceRecord></AttendanceRecord>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal size=\"sm\" show={showA} onHide={handleCloseA}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Missing Days</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\tnumber of missing days is <strong>{missingDays}</strong> days\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseA}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal size=\"sm\" show={showB} onHide={handleCloseB}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>\r\n\t\t\t\t\t\t{missingHours >= 0 ? \"Missing Hours\" : \"Extra Hours\"}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{missingHours >= 0 ? \"Missing Hours \" : \"Extra Hours \"} is{\" \"}\r\n\t\t\t\t\t<strong>{missingHours}</strong> hours\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseB}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal size=\"lg\" show={showC} onHide={handleCloseC}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{profile && (\r\n\t\t\t\t\t\t<Profile\r\n\t\t\t\t\t\t\tname={profile.name}\r\n\t\t\t\t\t\t\temail={profile.email}\r\n\t\t\t\t\t\t\tsalary={profile.salary}\r\n\t\t\t\t\t\t\tid={profile.id}\r\n\t\t\t\t\t\t\taccidentalLeaveBalance={profile.accidentalLeaveBalance.balance}\r\n\t\t\t\t\t\t\tannualLeaveBalance={profile.annualLeaveBalance.balance}\r\n\t\t\t\t\t\t\tgender={profile.gender}\r\n\t\t\t\t\t\t\tpersonalInfo={profile.personalInfo}\r\n\t\t\t\t\t\t\tdepartment={profile.departmentId}\r\n\t\t\t\t\t\t\tlocation={profile.locationId}\r\n\t\t\t\t\t\t\tfaculty={profile.facultyId}\r\n\t\t\t\t\t\t></Profile>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseC}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t<div class=\"col col-12 head containerIntro\">\r\n\t\t\t\t\t<h1>Home</h1>\r\n\t\t\t\t\t<span className=\"m-2\">Welcome</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row center\">\r\n\t\t\t\t\t\t<div class=\"col-md-3 containerIntro\">\r\n\t\t\t\t\t\t\t<button type=\"button\" href=\"#\" class=\"btn\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclass=\"far fa-clipboard fa-3x\"\r\n\t\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleShow}\r\n\t\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p>Attendance Records</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span class=\" border-dark icons\">view attendance records</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-3 containerIntro\">\r\n\t\t\t\t\t\t\t<button type=\"button\" href=\"#\" class=\"btn\" onClick={showProfile}>\r\n\t\t\t\t\t\t\t\t<span class=\"far fa-user fa-3x\"> </span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p>Profile</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span class=\" border-dark icons\">view profile</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-3 containerIntro\">\r\n\t\t\t\t\t\t\t<button type=\"button\" href=\"#\" class=\"btn\" onClick={showMissingDays}>\r\n\t\t\t\t\t\t\t\t<span class=\"far fa-calendar-times fa-3x\"> </span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p>Missing Days</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span class=\" border-dark icons\">view missing days</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-3 containerIntro\">\r\n\t\t\t\t\t\t\t<button type=\"button\" href=\"#\" class=\"btn\" onClick={showMissingHours}>\r\n\t\t\t\t\t\t\t\t<span class=\"far fa-clock fa-3x\"> </span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p>Missing/Extra hours</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span class=\" border-dark icons\">view missing/extra hours</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row center\">\r\n\t\t\t\t\t\t<div class=\"offset-md-3 col-md-3 containerIntro\">\r\n\t\t\t\t\t\t\t<button type=\"button\" href=\"#\" class=\"btn\" onClick={signIn}>\r\n\t\t\t\t\t\t\t\t<span class=\"fas fa-sign-in-alt fa-3x\"> </span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p>Sign In</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span class=\" border-dark icons\">sign in</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-3 containerIntro\">\r\n\t\t\t\t\t\t\t<button type=\"button\" href=\"#\" class=\"btn\" onClick={signOut}>\r\n\t\t\t\t\t\t\t\t<span class=\"fas fa-sign-out-alt fa-3x\"> </span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p>Sign Out</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span class=\" border-dark icons\">sign out</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default StaffHome;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\GlobalState.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\CourseCoverage.js",["199","200","201"],"import React, { useEffect, useState } from \"react\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport StaffMember from \"./StaffMember\";\r\nimport NavBar from \"./NavBar\";\r\nimport { hodFetcher } from \"../API/hodFetcher\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst CourseCoverage = () => {\r\n  const { user } = GetUser();\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      try {\r\n        const res = await hodFetcher.viewCourseCoverage(user.token);\r\n        console.log(\"res\" + res);\r\n        setCourses(res);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    data();\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\r\n        Courses coverage\r\n      </h1>\r\n      <div class=\"col-7 offset-4\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr class=\"d-flex\">\r\n              <th class=\"col-2\"> Course name </th>\r\n              <th class=\"col-4\"> Course coverage </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {courses.map((obj) => {\r\n              return (\r\n                <tr class=\"d-flex\">\r\n                  <td class=\"col-2\">{obj.course}</td>\r\n                  <td class=\"col-4\">{obj.coverage}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CourseCoverage;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Login.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\ViewRequests.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\NavBar.js",["202","203","204","205","206","207","208","209","210"],"import React, { component, useState } from \"react\";\r\nimport \"../HodHome\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { logoutFetcher } from \"../API/logoutFetcher\";\r\nimport { staffFetcher } from \"../API/staffFetcher\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\n\r\nfunction NavBar() {\r\n\tconst { user } = GetUser();\r\n\tconst [redirect, setRedirect] = useState(\"\");\r\n\tconst [showAccept, setShowAccept] = useState(false);\r\n\tconst [showA, setShowA] = useState(false);\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [passwordText, setPasswordText] = useState(\"Enter new password\");\r\n\r\n\tconst handleClose1 = () => setShowAccept(false);\r\n\tconst handleShow1 = () => setShowAccept(true);\r\n\tconst handleShowA = () => setShowA(true);\r\n\tconst handleCloseA = () => setShowA(false);\r\n\r\n\tconst openNav = () => {\r\n\t\tdocument.getElementById(\"mySidenav\").style.width = \"250px\";\r\n\t\tdocument.getElementById(\"main\").style.marginLeft = \"250px\";\r\n\t};\r\n\tconst closeNav = () => {\r\n\t\tdocument.getElementById(\"mySidenav\").style.width = \"0px\";\r\n\t\tdocument.getElementById(\"main\").style.marginLeft = \"0px\";\r\n\t};\r\n\tconst logOut = async () => {\r\n\t\tconst l = await logoutFetcher.logout(user.token);\r\n\t\tsetRedirect(\"/\");\r\n\t};\r\n\tconst resetPassword = async () => {\r\n\t\tif (newPassword.length < 6)\r\n\t\t\treturn setPasswordText(\r\n\t\t\t\t\"the password is less than 6 digits this is not possible\"\r\n\t\t\t);\r\n\r\n\t\tawait staffFetcher.resetPassword(newPassword, user.token);\r\n\t\tsetPasswordText(\"password updated successfully\");\r\n\t};\r\n\r\n\tif (redirect) return <Redirect to={Redirect} />;\r\n\treturn (\r\n\t\t<div class=\"container-fluid\">\r\n\t\t\t<div id=\"mySidenav\" class=\"sidenav\">\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-light closebtn\" onClick={closeNav}>\r\n\t\t\t\t\t&times;\r\n\t\t\t\t</button>\r\n\t\t\t\t<a href=\"#\">About</a>\r\n\t\t\t\t<a href=\"#\">Services</a>\r\n\t\t\t\t<a href=\"#\">Clients</a>\r\n\t\t\t\t<a href=\"#\">Contact</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"main\" class=\"row container-fluid\">\r\n\t\t\t\t<nav class=\"col-xl-12 navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t\t\t<a class=\"navbar-brand\" href=\"#\">\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t<button type=\"button\" href=\"#\" onClick={openNav} class=\"btn\">\r\n\t\t\t\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\tGUC\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclass=\"navbar-toggler\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tdata-bs-toggle=\"collapse\"\r\n\t\t\t\t\t\tdata-bs-target=\"#navbarSupportedContent\"\r\n\t\t\t\t\t\taria-controls=\"navbarSupportedContent\"\r\n\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t<ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t\t{user.type === \"academic\" && (\r\n\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tclass=\"nav-link active\"\r\n\t\t\t\t\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t\t\t\t\t\thref=\"http://localhost:3001/staffHome/\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{user.type === \"Hr\" && (\r\n\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tclass=\"nav-link active\"\r\n\t\t\t\t\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t\t\t\t\t\thref=\"http://localhost:3001/hrHome/\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<NavDropdown title=\"preferences\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\" onClick={setShowA}>\r\n\t\t\t\t\t\t\t\t\tUpdate profile\r\n\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={handleShow1} href=\"#action/3.2\">\r\n\t\t\t\t\t\t\t\t\tReset password\r\n\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">not yet</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t<NavDropdown.Divider />\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.4\">not yet</NavDropdown.Item>\r\n\t\t\t\t\t\t\t</NavDropdown>\r\n\r\n\t\t\t\t\t\t\t{user.type === \"academic\" && (\r\n\t\t\t\t\t\t\t\t<NavDropdown title=\"navigate\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t\t\t\t\t{user.hod && (\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"/hodHome\">\r\n\t\t\t\t\t\t\t\t\t\t\tHead of Department\r\n\t\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{user.instructor && (\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">Instructor</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{user.academic && (\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">Academic</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{user.coordinator && (\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">Coordinator</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tclass=\"nav-link active\"\r\n\t\t\t\t\t\t\t\t\taria-current=\"page\"\r\n\t\t\t\t\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\t\t\t\t\tonClick={logOut}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showAccept}\r\n\t\t\t\tonHide={handleClose1}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Update password</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Enter new password\"\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetNewPassword(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">{passwordText}</Form.Text>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose1}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={resetPassword} variant=\"primary\">\r\n\t\t\t\t\t\tconfirm\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal size=\"md\" show={showA} onHide={handleCloseA}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Update Profile</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body><UpdateProfile handleClose = {handleCloseA}></UpdateProfile></Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseA}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\requestsHomePage.js",["211","212","213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport { hodFetcher } from \"../API/hodFetcher\";\r\n\r\nconst RequestOnHome = () => {\r\n  const { user } = GetUser();\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [pending, setPending] = useState(0);\r\n  const [accepted, setAccepted] = useState(0);\r\n  const [rejected, setRejected] = useState(0);\r\n\r\n  let classes = \"badge m-5 \";\r\n  classes += pending === 0 ? \"badge-warning\" : \"badge-primary\";\r\n\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      let p = 0;\r\n      let a = 0;\r\n      let r = 0;\r\n      try {\r\n        const res = await hodFetcher.viewRequests(user.token);\r\n        for (const entry of res) {\r\n          if (entry.status === \"accepted\") a++;\r\n          if (entry.status === \"rejected\") r++;\r\n          if (entry.status === \"pending\") p++;\r\n        }\r\n        setPending(p);\r\n        setAccepted(a);\r\n        setRejected(r);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    data();\r\n  }, []);\r\n\r\n  const formatCount = () => {\r\n    return pending === 0 ? \"zero\" : pending;\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n  return (\r\n    <div class=\"card text-white bg-dark \">\r\n      <div class=\"card-header\">\r\n        Requests\r\n        <span className={classes}>{formatCount()}</span>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Current requests records</h5>\r\n        <ul>\r\n          <li>You currently have {pending} pending requests</li>\r\n          <li>You currently have {accepted} accepted requests</li>\r\n          <li>You currently have {rejected} rejected requests</li>\r\n        </ul>\r\n        <a\r\n          href=\"#\"\r\n          class=\"btn btn-primary\"\r\n          onClick={() => {\r\n            {\r\n              setRedirect(\"/homePage/requests\");\r\n            }\r\n          }}\r\n        >\r\n          Go requests\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RequestOnHome;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\saveToLocalStorage.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\StaffMember.js",["215"],"import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport { getterFetcher } from \"../API/getterFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\n\r\nconst ViewStaff = (props) => {\r\n\tconst { user } = GetUser();\r\n\tconst [showAdd, setShowAdd] = useState(false);\r\n\tconst [showDelete, setShowDelete] = useState(false);\r\n\tconst [showUpdate, setShowUpdate] = useState(false);\r\n\tconst [course, setCourse] = useState(\"\");\r\n\tconst [type, setType] = useState(\"\");\r\n\tconst [courses, setCourses] = useState([]);\r\n\tconst [newStaff, setNewStaff] = useState(\"\");\r\n\tconst [office, setOffice] = useState(\"\");\r\n\tconst [dayOff, setDayOff] = useState(\"\");\r\n\r\n\tconst handleClose1 = () => setShowAdd(false);\r\n\tconst handleShow1 = () => setShowAdd(true);\r\n\r\n\tconst handleClose2 = () => setShowDelete(false);\r\n\tconst handleShow2 = () => setShowDelete(true);\r\n\r\n\tconst handleClose3 = () => setShowUpdate(false);\r\n\tconst handleShow3 = () => setShowUpdate(true);\r\n\r\n\tconst disCourses = (course, position) => {\r\n\t\tif (props.courses.length === 0) return <span>no courses </span>;\r\n\t\telse\r\n\t\t\treturn (\r\n\t\t\t\t<ul class=\"list-group list-group-horizontal\">\r\n\t\t\t\t\t<li class=\"list-group-item\">{course}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{position}</li>{\" \"}\r\n\t\t\t\t</ul>\r\n\t\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst courseName = async (arr) => {\r\n\t\t\tlet coursesNames = [];\r\n\t\t\tfor (var j = 0; j < props.courses.length; j++) {\r\n\t\t\t\tconst c = await getterFetcher.getCourseNameById(\r\n\t\t\t\t\tprops.courses[j].courseId,\r\n\t\t\t\t\tuser.token\r\n\t\t\t\t);\r\n\t\t\t\tcoursesNames.push({\r\n\t\t\t\t\tcourse: c,\r\n\t\t\t\t\tposition: props.courses[j].position,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetCourses(coursesNames);\r\n\t\t\treturn coursesNames;\r\n\t\t};\r\n\r\n\t\tconst officeName = async () => {\r\n\t\t\tconsole.log(\"office  \" + props.office);\r\n\t\t\tconst l = await getterFetcher.getLocationNameById(props.office, user.token);\r\n\t\t\tconsole.log(l);\r\n\t\t\tsetOffice(l);\r\n\t\t};\r\n\r\n\t\tconst dayOffFun = async () => {\r\n\t\t\tconst d = await props.handleDayOff(props.id);\r\n\t\t\tsetDayOff(d);\r\n\t\t};\r\n\t\tdayOffFun();\r\n\t\tcourseName();\r\n\t\tofficeName();\r\n\t}, [props.courses]);\r\n\r\n\tconst getDay = (num) => {\r\n\t\tswitch (num) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn \"Sunday\";\r\n\t\t\tcase 1:\r\n\t\t\t\treturn \"Monday\";\r\n\t\t\tcase 2:\r\n\t\t\t\treturn \"Tuesday\";\r\n\t\t\tcase 3:\r\n\t\t\t\treturn \"Wednesday\";\r\n\t\t\tcase 4:\r\n\t\t\t\treturn \"Thursday\";\r\n\t\t\tcase 5:\r\n\t\t\t\treturn \"Friday\";\r\n\t\t\tcase 6:\r\n\t\t\t\treturn \"Saturday\";\r\n\t\t\tdefault:\r\n\t\t}\r\n\t};\r\n\r\n\tconst popover = (\r\n\t\t<Popover id=\"popover-basic\">\r\n\t\t\t<Popover.Title as=\"h3\">Day Off</Popover.Title>\r\n\t\t\t<Popover.Content>\r\n\t\t\t\tthis Staff member days off are Friday and {getDay(dayOff)}\r\n\t\t\t</Popover.Content>\r\n\t\t</Popover>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ marginTop: 15 }} className=\"container row\">\r\n\t\t\t\t<div className=\"col-xl-10 offset-3\">\r\n\t\t\t\t\t<Accordion defaultActiveKey=\"1\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t<span>{props.name}</span>\r\n\t\t\t\t\t\t\t\t<span style={{ paddingInline: 300 }}>{props.id}</span>\r\n\t\t\t\t\t\t\t\t<span style={{ paddingInline: 0 }}>props.type</span>\r\n\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t<dl class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">e-mail</dt>\r\n\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{props.email}</dd>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">salary</dt>\r\n\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{props.salary}</dd>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">Courses</dt>\r\n\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">\r\n\t\t\t\t\t\t\t\t\t\t\t{courses && Array.isArray(courses)\r\n\t\t\t\t\t\t\t\t\t\t\t\t? courses.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn disCourses(item.course, item.position);\r\n\t\t\t\t\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t\t\t\t\t\t: []}\r\n\t\t\t\t\t\t\t\t\t\t</dd>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3 text-truncate\">Office location</dt>\r\n\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{office.name}</dd>\r\n\t\t\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"col col-3\" variant=\"light\" onClick={handleShow1}>\r\n\t\t\t\t\t\t\t\t\t\tAdd course\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"col col-3\" variant=\"light\" onClick={handleShow2}>\r\n\t\t\t\t\t\t\t\t\t\tDelete course\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"col col-3\" variant=\"light\" onClick={handleShow3}>\r\n\t\t\t\t\t\t\t\t\t\tupdate course\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\t\t\t\t\trootClose={true}\r\n\t\t\t\t\t\t\t\t\t\ttrigger=\"click\"\r\n\t\t\t\t\t\t\t\t\t\tplacement=\"top\"\r\n\t\t\t\t\t\t\t\t\t\toverlay={popover}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"col col-3\" variant=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t\tClick me to see day off\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showAdd}\r\n\t\t\t\tonHide={handleClose1}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>add Course</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetCourse(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"course\"\r\n\t\t\t\t\t\tplaceholder=\"Enter course\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">Enter the exact course name.</Form.Text>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetType(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"type\"\r\n\t\t\t\t\t\tplaceholder=\"Enter type\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tenter \"instructor\" or \"academic\"\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose1}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => props.handleAdd(course, props.id, type)}\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showDelete}\r\n\t\t\t\tonHide={handleClose2}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Delete Course</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetCourse(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"course\"\r\n\t\t\t\t\t\tplaceholder=\"Enter course\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">Enter the exact course name.</Form.Text>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose2}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.handleDelete(course, props.id);\r\n\t\t\t\t\t\t\tsetCourse(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showUpdate}\r\n\t\t\t\tonHide={handleClose3}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>update Course</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetCourse(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"course\"\r\n\t\t\t\t\t\tplaceholder=\"Enter course\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">Enter the exact course name.</Form.Text>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetNewStaff(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"course\"\r\n\t\t\t\t\t\tplaceholder=\"Enter new staff member\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tEnter the new staff member to swap courses.\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose3}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.handleUpdate(course, props.id, newStaff);\r\n\t\t\t\t\t\t\tsetCourse(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tupdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ViewStaff;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\hodFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\loginFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\academicFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\RequestForm.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Schedule.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\logoutFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\staffFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\getterFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Cell.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrStaffMember.js",["216","217"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { hrFetcher } from \"../API/hrFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport HrStaffMemberTemp from \"./HrStaffMemberTemp\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n//import hr from \"../../../server/models/hr\";\r\n\r\nconst HrStaffMember = () => {\r\n  const { user } = GetUser();\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [staff, setStaff] = useState([]);\r\n  const [email,setEmail]=useState(null)\r\n  const [name,setName]=useState(null)\r\n  const [officeLocation,setOfficeLocation]=useState(null)\r\n  const [salary,setSalary]=useState(null)\r\n  const [personalInfo,setPersonalInfo]=useState(\"\")\r\n  const [gender,setGender]=useState(\"male\")\r\n  const [type,setType]=useState(\"hr\")\r\n\r\n  const handleClose1 = () => setShowAdd(false);\r\n  const handleShow1 = () => setShowAdd(true);\r\n\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      try {\r\n        const res = await hrFetcher.viewAllStaffMembers(user.token);\r\n        setStaff(res);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    data();\r\n  }, []);\r\n\r\n  const deleteStaff = async (id) => {\r\n    try {\r\n      const res = await hrFetcher.deleteStaffMember(user.token, id);\r\n      setStaff(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const updateStaff = async(id,\r\n    name,\r\n    officeLocation,\r\n    email,\r\n    salary) => {\r\n    try{\r\n\r\n      const res = await hrFetcher.updateStaffMember(user.token, id,name,email,officeLocation,salary);\r\n      setStaff(res);\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const addStaff= async()=>{\r\n    try{\r\n      const res=await hrFetcher.addStaffMember(user.token, name, email, officeLocation, salary, gender, type, personalInfo)\r\n      setStaff(res);\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\r\n        Staff Members\r\n      </h1>\r\n      <Button\r\n        onClick={() => handleShow1()}\r\n        className=\"col-4 offset-4\"\r\n        variant=\"dark\"\r\n        style={{ padding: 8 }}\r\n      >\r\n        Add Staff Member\r\n      </Button>{\" \"}\r\n      <div class=\"col-9\">\r\n        {staff.map((obj) => {\r\n          return (\r\n            <HrStaffMemberTemp\r\n              key={obj.id}\r\n              name={obj.name}\r\n              id={obj.id}\r\n              email={obj.email}\r\n              salary={obj.salary}\r\n              office={obj.officeLocationId}\r\n              handleDelete={deleteStaff}\r\n              handleUpdate={updateStaff}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>add Staff Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter name\" onChange={(event)=>{setName(event.target.value)}} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Office Location</Form.Label>\r\n                <Form.Control placeholder=\"ex: c7.202\" onChange={(event)=>{setOfficeLocation(event.target.value)}}/>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridAddress1\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control placeholder=\"ex: test@guc.edu.eg\" onChange={(event)=>{setEmail(event.target.value)}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridAddress2\">\r\n              <Form.Label>personal Information</Form.Label>\r\n              <Form.Control placeholder=\"personal info\" onChange={(event)=>{setPersonalInfo(event.target.value)}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridCity\">\r\n                <Form.Label>salary</Form.Label>\r\n                <Form.Control placeholder=\"10000\" onChange={(event)=>{setSalary(event.target.value)}}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Male\" onChange={(event)=>{setGender(event.target.value)}}>\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Type</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"hr\" onChange={(event)=>{setType(event.target.value)}}>\r\n                  <option value=\"hr\">hr</option>\r\n                  <option value=\"academic\">academic</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>addStaff()}>Add</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HrStaffMember;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\API\\hrFetcher.js",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrStaffMemberTemp.js",["218","219","220"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getterFetcher } from \"../API/getterFetcher\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst HrStaffMemberTemp = (props) => {\r\n  const { user } = GetUser();\r\n  const [email,setEmail]=useState(null)\r\n  const [name,setName]=useState(null)\r\n  const [officeLocation,setOfficeLocation]=useState(null)\r\n  const [salary,setSalary]=useState(null)\r\n  const [showAdd, setShowAdd] = useState(false);\r\n\r\n  const handleClose1 = () => setShowAdd(false);\r\n  const handleShow1 = () => setShowAdd(true);\r\n\r\n  const [office, setOffice] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const x = async () => {\r\n      const y=await getterFetcher.getLocationNameById(\r\n        props.office,\r\n        user.token\r\n      );\r\n      //console.log(y)\r\n      setOffice(y);\r\n    };\r\n    x();\r\n  }, [props.office]);\r\n\r\n  return (\r\n    <div className=\"col-xl-10 offset-3\" style={{ marginTop: 10 }}>\r\n      <Accordion defaultActiveKey=\"1\">\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n            <span>{props.name}</span>\r\n            <span style={{ paddingInline: 300 }}>{props.id}</span>\r\n            <span style={{ paddingInline: 0 }}>props.type</span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              <dl class=\"row\">\r\n                <dt class=\"col-sm-3\">e-mail</dt>\r\n                <dd class=\"col-sm-9\">{props.email}</dd>\r\n\r\n                <dt class=\"col-sm-3\">salary</dt>\r\n                <dd class=\"col-sm-9\">{props.salary}</dd>\r\n\r\n                <dt class=\"col-sm-3 text-truncate\">Office location</dt>\r\n                <dd class=\"col-sm-9\">{office.name}</dd>\r\n              </dl>\r\n              <Button className=\"col col-3\" variant=\"light\">\r\n                Add course\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  props.handleDelete(props.id);\r\n                }}\r\n                className=\"col col-3\"\r\n                variant=\"light\"\r\n              >\r\n                Delete User\r\n              </Button>\r\n              <Button  onClick={() => handleShow1()} className=\"col col-3\" variant=\"light\">\r\n                update user\r\n              </Button>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>update Staff Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter name\" onChange={(event)=>{setName(event.target.value)}} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Office Location</Form.Label>\r\n                <Form.Control placeholder=\"ex: c7.202\" onChange={(event)=>{setOfficeLocation(event.target.value)}}/>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridAddress1\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control placeholder=\"ex: test@guc.edu.eg\" onChange={(event)=>{setEmail(event.target.value)}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n                <Form.Label>salary</Form.Label>\r\n                <Form.Control placeholder=\"10000\" onChange={(event)=>{setSalary(event.target.value)}}/>\r\n            </Form.Group>\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>props.handleUpdate(props.id, name,officeLocation,email,salary) }>Update</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default HrStaffMemberTemp;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrLocation.js",["221","222"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { hrFetcher } from \"../API/hrFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport HrLocationTemp from \"./HrLocationTemp\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst HrLocation = () => {\r\n  const { user } = GetUser();\r\n  const [location, setLocation] = useState([]);\r\n  const [name, setName] = useState(null);\r\n  const [type, setType] = useState(\"office\");\r\n  const [maxCapacity, setMaxCapacity] = useState(20);\r\n\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const handleClose1 = () => setShowAdd(false);\r\n  const handleShow1 = () => setShowAdd(true);\r\n\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      try {\r\n        const res = await hrFetcher.viewAllLocations(user.token);\r\n        console.log(\"result \" + res);\r\n        setLocation(res);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    data();\r\n  }, []);\r\n\r\n  const deleteLocation = async (name) => {\r\n    try {\r\n      const res = await hrFetcher.deleteLocation(user.token, name);\r\n      setLocation(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const updateLocation = async (name, newName, maxCapacity, type) => {\r\n    try {\r\n      const res = await hrFetcher.updateLocation(\r\n        user.token,\r\n        name,\r\n        newName,\r\n        maxCapacity,\r\n        type\r\n      );\r\n      console.log(res);\r\n      setLocation(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const addLocation = async () => {\r\n    try {\r\n      const res = await hrFetcher.addLocation(\r\n        user.token,\r\n        name,\r\n        maxCapacity,\r\n        type\r\n      );\r\n      console.log(res);\r\n      setLocation(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\r\n        Faculties\r\n      </h1>\r\n      <Button\r\n        onClick={() => handleShow1()}\r\n        className=\"col-4 offset-4\"\r\n        variant=\"dark\"\r\n        style={{ padding: 8 }}\r\n      >\r\n        Add Location\r\n      </Button>{\" \"}\r\n      <div class=\"col-9\">\r\n        {location.map((obj) => {\r\n          return (\r\n            <HrLocationTemp\r\n              key={obj.id}\r\n              name={obj.name}\r\n              maxCapacity={obj.maxCapacity}\r\n              handleDelete={deleteLocation}\r\n              handleUpdate={updateLocation}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Department</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter location name\" onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Max Capacity</Form.Label>\r\n                <Form.Control placeholder=\"max capacity\" onChange={(event) => {\r\n                    setMaxCapacity(event.target.value);\r\n                  }}/>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>tyoe</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(event) => {setType(event.target.value);}} defaultValue=\"office\">\r\n                  <option value=\"office\">office</option>\r\n                  <option value=\"tutorial room\">tutorial room</option>\r\n                  <option value=\"lab\">lab</option>\r\n                  <option value=\"lecture hall\">lecture hall</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => addLocation()}>\r\n            Add\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HrLocation;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\AttendanceRecord.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Record.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrLocationTemp.js",["223","224","225","226"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\nconst HrLocationTemp = (props) => {\r\n  const { user } = GetUser();\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [name, setName] = useState(null);\r\n  const [type, setType] = useState(\"office\");\r\n  const [maxCapacity, setMaxCapacity] = useState(20);\r\n\r\n\r\n  const handleClose1 = () => setShowAdd(false);\r\n  const handleShow1 = () => setShowAdd(true);\r\n\r\n    return(\r\n        <div className=\"col-xl-10 offset-3\">\r\n          <Accordion defaultActiveKey=\"1\">\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                <span>{props.name}</span>\r\n                <span style={{ paddingInline: 300 }}>props.id</span>\r\n                <span style={{ paddingInline: 0 }}>props.type</span>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <dl class=\"row\">\r\n                    <dt class=\"col-sm-3\">Max capacity</dt>\r\n                    <dd class=\"col-sm-9\">{props.maxCapacity}</dd>\r\n                  </dl>\r\n                  <Button\r\n                    className=\"col col-3\"\r\n                    variant=\"light\"\r\n                  >\r\n                    Add course\r\n                  </Button>\r\n                  <Button\r\n                    onClick={()=>{props.handleDelete(props.name)}}\r\n                    className=\"col col-3\"\r\n                    variant=\"light\"\r\n                  >\r\n                    Delete location\r\n                  </Button>\r\n                  <Button\r\n                   onClick={() => handleShow1()}\r\n                    className=\"col col-3\"\r\n                    variant=\"light\"\r\n                  >\r\n                    update location\r\n                  </Button>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n\r\n          <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Department</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter location name\" onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Max Capacity</Form.Label>\r\n                <Form.Control placeholder=\"max capacity\" onChange={(event) => {\r\n                    setMaxCapacity(event.target.value);\r\n                  }}/>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>tyoe</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(event) => {setType(event.target.value);}} defaultValue=\"office\">\r\n                  <option value=\"office\">office</option>\r\n                  <option value=\"tutorial room\">tutorial room</option>\r\n                  <option value=\"lab\">lab</option>\r\n                  <option value=\"lecture hall\">lecture hall</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => props.handleUpdate(props.name,name,maxCapacity,type)}>\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HrLocationTemp","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrDepartment.js",["227","228"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { hrFetcher } from \"../API/hrFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport HrDepartmentTemp from \"./HrDepartmentTemp\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst HrDepartment = () => {\r\n    const { user } = GetUser();\r\n    const [ department,setDepartment ]=useState([])\r\n    const [name,setName]=useState(null)\r\n    const [faculty,setFaculty]=useState(null)\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const handleClose1 = () => setShowAdd(false);\r\n    const handleShow1 = () => setShowAdd(true);\r\n\r\n    useEffect(()=>{\r\n        const data = async () => {\r\n            try {\r\n              const res = await hrFetcher.viewAllDepartments( user.token);\r\n              console.log(\"result \"+res)\r\n              setDepartment(res);\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          };\r\n          data();\r\n        }, []);\r\n\r\n        const updateDepartment = async(name,\r\n          newName,\r\n          newFaculty) => {\r\n          try{\r\n      \r\n            const res = await hrFetcher.updateDepartment(user.token, name,newName,newFaculty);\r\n            console.log(res)\r\n            setDepartment(res);\r\n          }catch(err){\r\n            console.log(err)\r\n          }\r\n        }\r\n      \r\n        const addDepartment= async()=>{\r\n          try{\r\n            const res=await hrFetcher.addDepartment(user.token, name, faculty)\r\n            console.log(res)\r\n            setDepartment(res);\r\n          }\r\n          catch(err){\r\n            console.log(err)\r\n          }\r\n        }\r\n\r\n        const deleteDepartment=async (name) => {\r\n            try{\r\n                const res=await hrFetcher.deleteDepartment(user.token,name)\r\n                setDepartment(res)\r\n            } catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n    return(\r\n    <div>\r\n      <NavBar />\r\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\r\n        Departments\r\n      </h1>\r\n      <Button\r\n        onClick={() => handleShow1()}\r\n        className=\"col-4 offset-4\"\r\n        variant=\"dark\"\r\n        style={{ padding: 8 }}\r\n      >\r\n        Add Department\r\n      </Button>{\" \"}\r\n      <div class=\"col-9\">\r\n      {\r\n          department.map((obj)=>{\r\n              return <HrDepartmentTemp  key={obj.id}\r\n              name={obj.name}\r\n              handleDelete={deleteDepartment}\r\n              handleUpdate={updateDepartment}\r\n              />\r\n\r\n          })\r\n      }\r\n      </div>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Department</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter department name\" onChange={(event)=>{setName(event.target.value)}} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Faculty</Form.Label>\r\n                <Form.Control placeholder=\"enter faculty name\" onChange={(event)=>{setFaculty(event.target.value)}}/>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>addDepartment() }>Add</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      \r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default HrDepartment;","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrFaculty.js",["229","230"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { hrFetcher } from \"../API/hrFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport HrFacultyTemp from \"./HrFacultyTemp\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst HrFaculty = () => {\r\n    const { user } = GetUser();\r\n    const [ faculty,setFaculty ]=useState([])\r\n    const [name,setName]=useState(null)\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const handleClose1 = () => setShowAdd(false);\r\n    const handleShow1 = () => setShowAdd(true);\r\n\r\n    useEffect(()=>{\r\n        const data = async () => {\r\n            try {\r\n              const res = await hrFetcher.viewAllFaculties( user.token);\r\n              console.log(\"result \"+res)\r\n              setFaculty(res);\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          };\r\n          data();\r\n        }, []);\r\n\r\n        const deleteFaculty=async (name) => {\r\n            try{\r\n                const res=await hrFetcher.deleteFaculty(user.token,name)\r\n                setFaculty(res)\r\n            } catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        const updateFaculty = async(name,\r\n          newName) => {\r\n          try{\r\n      \r\n            const res = await hrFetcher.updateFaculty(user.token, name,newName);\r\n            console.log(res)\r\n            setFaculty(res);\r\n          }catch(err){\r\n            console.log(err)\r\n          }\r\n        }\r\n      \r\n        const addFaculty= async()=>{\r\n          try{\r\n            const res=await hrFetcher.addFaculty(user.token, name)\r\n            console.log(res)\r\n            setFaculty(res);\r\n          }\r\n          catch(err){\r\n            console.log(err)\r\n          }\r\n        }\r\n    return(\r\n    <div>\r\n      <NavBar />\r\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\r\n        Faculties\r\n      </h1>\r\n      <Button\r\n        onClick={() => handleShow1()}\r\n        className=\"col-4 offset-4\"\r\n        variant=\"dark\"\r\n        style={{ padding: 8 }}\r\n      >\r\n        Add Faculty\r\n      </Button>{\" \"}\r\n      <div class=\"col-9\">\r\n      {\r\n          faculty.map((obj)=>{\r\n              return <HrFacultyTemp  key={obj.id}\r\n              name={obj.name}\r\n              handleDelete={deleteFaculty}\r\n              handleUpdate={updateFaculty}\r\n              />\r\n\r\n          })\r\n      }\r\n      </div>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Department</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter Faculty name\" onChange={(event)=>{setName(event.target.value)}} />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>addFaculty() }>Add</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      \r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default HrFaculty;","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrDepartmentTemp.js",["231","232","233","234"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\n\r\nconst HrDepartmentTemp = (props) => {\r\n  const { user } = GetUser();\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [name, setName] = useState(null);\r\n  const [faculty, setFaculty] = useState(null);\r\n\r\n  const handleClose1 = () => setShowAdd(false);\r\n  const handleShow1 = () => setShowAdd(true);\r\n\r\n    return(\r\n        <div className=\"col-xl-10 offset-3\">\r\n          <Accordion defaultActiveKey=\"1\">\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                <span>{props.name}</span>\r\n                <span style={{ paddingInline: 300 }}>props.id</span>\r\n                <span style={{ paddingInline: 0 }}>props.type</span>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <dl class=\"row\">\r\n                    <dt class=\"col-sm-3\">Max capacity</dt>\r\n                    <dd class=\"col-sm-9\">props.maxCapacity</dd>\r\n                  </dl>\r\n                  <Button\r\n                    className=\"col col-3\"\r\n                    variant=\"light\"\r\n                  >\r\n                    Add course\r\n                  </Button>\r\n                  <Button\r\n                    onClick={()=>{props.handleDelete(props.name)}}\r\n                    className=\"col col-3\"\r\n                    variant=\"light\"\r\n                  >\r\n                    Delete course\r\n                  </Button>\r\n                  <Button\r\n                  onClick={() => handleShow1()}\r\n                    className=\"col col-3\"\r\n                    variant=\"light\"\r\n                  >\r\n                    update course\r\n                  </Button>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n          <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>update Course</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>New Name</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter name\"\r\n                  onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>New Faculty</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"enter department name\"\r\n                  onChange={(event) => {\r\n                    setFaculty(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => props.handleUpdate(props.name, name, faculty)}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default HrDepartmentTemp","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrCourse.js",["235","236"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { hrFetcher } from \"../API/hrFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport HrCourseTemp from \"./HrCourseTemp\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst HrCourse = () => {\r\n    const { user } = GetUser();\r\n    const [ course,setCourse ]=useState([])\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [name,setName]=useState(null)\r\n    const [department,setDepartment]=useState(null)\r\n\r\n    const handleClose1 = () => setShowAdd(false);\r\n    const handleShow1 = () => setShowAdd(true);\r\n\r\n    useEffect(()=>{\r\n        const data = async () => {\r\n            try {\r\n              const res = await hrFetcher.viewAllCourses( user.token);\r\n              console.log(\"result \"+res)\r\n              setCourse(res);\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          };\r\n          data();\r\n        }, []);\r\n\r\n        const deleteCourse=async (name) => {\r\n            try{\r\n                const res=await hrFetcher.deleteCourse(user.token,name)\r\n                setCourse(res)\r\n            } catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        const updateCourse = async(name,\r\n          newName,\r\n          department) => {\r\n          try{\r\n            console.log(\"dep \" +department)\r\n      \r\n            const res = await hrFetcher.updateCourse(user.token, name,newName,department);\r\n            setCourse(res);\r\n          }catch(err){\r\n            console.log(err)\r\n          }\r\n        }\r\n      \r\n        const addCourse= async()=>{\r\n          try{\r\n            const res=await hrFetcher.addCourse(user.token, name, department)\r\n            setCourse(res);\r\n          }\r\n          catch(err){\r\n            console.log(err)\r\n          }\r\n        }\r\n    return(\r\n    <div>\r\n      <NavBar />\r\n      <h1 style={{ fontWeight: 1, padding: 50 }} class=\"display-6\">\r\n        Courses\r\n      </h1>\r\n      <Button\r\n        onClick={() => handleShow1()}\r\n        className=\"col-4 offset-4\"\r\n        variant=\"dark\"\r\n        style={{ padding: 8 }}\r\n      >\r\n        Add Course\r\n      </Button>{\" \"}\r\n      <div class=\"col-9\">\r\n      {\r\n          course.map((obj)=>{\r\n              return <HrCourseTemp  key={obj.id}\r\n              name={obj.name}\r\n              handleDelete={deleteCourse}\r\n              handleUpdate={updateCourse}\r\n              />\r\n\r\n          })\r\n      }\r\n      </div>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add course</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Enter course name\" onChange={(event)=>{setName(event.target.value)}} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Department</Form.Label>\r\n                <Form.Control placeholder=\"enter department name\" onChange={(event)=>{setDepartment(event.target.value)}}/>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>addCourse() }>Add</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      \r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default HrCourse;","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrCourseTemp.js",["237","238","239","240","241"],"import NavBar from \"./NavBar\";\r\nimport React, { component, useEffect, useState } from \"react\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getterFetcher } from \"../API/getterFetcher\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst HrCourseTemp = (props) => {\r\n  const { user } = GetUser();\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [name, setName] = useState(null);\r\n  const [department, setDepartment] = useState(null);\r\n\r\n  const handleClose1 = () => setShowAdd(false);\r\n  const handleShow1 = () => setShowAdd(true);\r\n\r\n  return (\r\n    <div className=\"col-xl-10 offset-3\">\r\n      <Accordion defaultActiveKey=\"1\">\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n            <span>{props.name}</span>\r\n            <span style={{ paddingInline: 300 }}>props.id</span>\r\n            <span style={{ paddingInline: 0 }}>props.type</span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              <dl class=\"row\">\r\n                <dt class=\"col-sm-3\">Max capacity</dt>\r\n                <dd class=\"col-sm-9\">props.maxCapacity</dd>\r\n              </dl>\r\n              <Button className=\"col col-3\" variant=\"light\">\r\n                Add course\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  props.handleDelete(props.name);\r\n                }}\r\n                className=\"col col-3\"\r\n                variant=\"light\"\r\n              >\r\n                Delete course\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleShow1()}\r\n                className=\"col col-3\"\r\n                variant=\"light\"\r\n              >\r\n                update course\r\n              </Button>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <Modal\r\n        show={showAdd}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>update Course</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>New Name</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter name\"\r\n                  onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>New Department</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"enter department name\"\r\n                  onChange={(event) => {\r\n                    setDepartment(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => handleClose1}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => props.handleUpdate(props.name, name, department)}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default HrCourseTemp;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Profile.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\UpdateProfile.jsx",["242","243"],"import React, { useState, useEffect } from \"react\";\r\nimport { GetUser } from \"./GlobalState\";\r\nimport { staffFetcher } from \"../API/staffFetcher\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst UpdateProfile = (props) => {\r\n\tconst { user } = GetUser();\r\n\tconst [gender, setGender] = useState(\"undefined\");\r\n\tconst [personalInfo, setPersonalInfo] = useState(\"undefined\");\r\n\tconst [spinner, setSpinner] = useState(false);\r\n\r\n\tconst handleSubmission = async () => {\r\n\t\ttry {\r\n\t\t\tsetSpinner(true);\r\n\t\t\tconst message = await staffFetcher.updateProfile(\r\n\t\t\t\tgender,\r\n\t\t\t\tpersonalInfo,\r\n\t\t\t\tuser.token\r\n            );\r\n            setSpinner(false);\r\n            props.handleClose();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form.Group as={Row}>\r\n\t\t\t\t<Form.Label column=\"md\" md=\"4\">\r\n\t\t\t\t\t<span><strong>change gender:</strong></span>\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Col xs=\"auto\" className=\"my-1\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\tclassName=\"mr-sm-2\"\r\n\t\t\t\t\t\tid=\"requestType\"\r\n\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetGender(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"undefined\">choose...</option>\r\n\t\t\t\t\t\t<option value=\"male\">Male</option>\r\n\t\t\t\t\t\t<option value=\"female\">Female</option>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Form.Group>\r\n            <Form.Group as={Row}>\r\n\t\t\t\t\t<Form.Label column=\"md\" md={4}>\r\n\t\t\t\t\t\t<strong>comment:</strong>\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\tclassName=\"col-7\"\r\n\t\t\t\t\t\trows=\"5\"\r\n\t\t\t\t\t\ttype=\"textarea\"\r\n\t\t\t\t\t\tplaceholder=\"optional\"\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetPersonalInfo(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t<Button className=\"col-3\" variant=\"primary\" onClick={handleSubmission}>\r\n\t\t\t\t{spinner ? (\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"border\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t\tSubmit\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UpdateProfile;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\HrFacultyTemp.js",["244","245","246","247"],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\AcademicHome.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\Request.js",["248","249"],"import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { getterFetcher } from \"../API/getterFetcher\";\r\nimport { GetUser } from \"./GlobalState\";\r\n\r\nconst Request = (props) => {\r\n\tconst { user } = GetUser();\r\n\tconst [showAccept, setShowAccept] = useState(false);\r\n\tconst [showReject, setShowReject] = useState(false);\r\n\tconst [comment, setComment] = useState(\"\");\r\n\tconst [staff, setStaff] = useState(\"\");\r\n\tconst [course, setCourse] = useState(\"\");\r\n\tconst [location, setLocation] = useState(\"\");\r\n\r\n\tconst handleClose1 = () => setShowAccept(false);\r\n\tconst handleShow1 = () => setShowAccept(true);\r\n\r\n\tconst handleClose2 = () => setShowReject(false);\r\n\tconst handleShow2 = () => setShowReject(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst staff = async () => {\r\n\t\t\tconst a = await getterFetcher.getStaffById(props.senderId, user.token);\r\n\t\t\tsetStaff(a);\r\n\t\t};\r\n\t\tconst courseAndLocation = async () => {\r\n\t\t\tif (props.type === \"replacement\") {\r\n\t\t\t\tconst c = await getterFetcher.getCourseNameById(\r\n\t\t\t\t\tprops.replacement.courseId,\r\n\t\t\t\t\tuser.token\r\n\t\t\t\t);\r\n\t\t\t\tconst l = await getterFetcher.getLocationNameById(\r\n\t\t\t\t\tprops.replacement.locationId,\r\n\t\t\t\t\tuser.token\r\n\t\t\t\t);\r\n\t\t\t\tsetCourse(c);\r\n\t\t\t\tsetLocation(l.name);\r\n\t\t\t}\r\n\t\t\tif (props.type === \"slotLinking\") {\r\n\t\t\t\tconst c = await getterFetcher.getCourseNameById(\r\n\t\t\t\t\tprops.slotLinking.courseId,\r\n\t\t\t\t\tuser.token\r\n\t\t\t\t);\r\n\t\t\t\tconst l = await getterFetcher.getLocationNameById(\r\n\t\t\t\t\tprops.slotLinking.locationId,\r\n\t\t\t\t\tuser.token\r\n\t\t\t\t);\r\n\t\t\t\tsetCourse(c);\r\n\t\t\t\tsetLocation(l);\r\n\t\t\t}\r\n\t\t};\r\n\t\tstaff();\r\n\t\tcourseAndLocation();\r\n\t}, []);\r\n\r\n\tconst getDay = (num) => {\r\n\t\tswitch (num) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn \"Sunday\";\r\n\t\t\tcase 1:\r\n\t\t\t\treturn \"Monday\";\r\n\t\t\tcase 2:\r\n\t\t\t\treturn \"Tuesday\";\r\n\t\t\tcase 3:\r\n\t\t\t\treturn \"Wednesday\";\r\n\t\t\tcase 4:\r\n\t\t\t\treturn \"Thursday\";\r\n\t\t\tcase 5:\r\n\t\t\t\treturn \"Friday\";\r\n\t\t\tcase 6:\r\n\t\t\t\treturn \"Saturday\";\r\n\t\t}\r\n\t};\r\n\r\n\tconst disable = () => {\r\n\t\tif (props.status !== \"pending\") return true;\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst renderReplacment = () => {\r\n\t\tconsole.log(props.replacement);\r\n\t\tif (props.type === \"replacement\")\r\n\t\t\treturn (\r\n\t\t\t\t<ul class=\"list-group\">\r\n\t\t\t\t\t<li class=\"list-group-item\">{course}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{props.replacement.slotDate}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{props.replacement.slot}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{location}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{props.replacement.academicResponse}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t);\r\n\t\tif (props.type === \"slotLinking\")\r\n\t\t\treturn (\r\n\t\t\t\t<ul class=\"list-group\">\r\n\t\t\t\t\t<li class=\"list-group-item\">{course}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{getDay(props.replacement.weekDay)}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{props.replacement.slot}</li>\r\n\t\t\t\t\t<li class=\"list-group-item\">{location}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t);\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ marginTop: 15 }} className=\"container row\">\r\n\t\t\t\t<div className=\"col-xl-10 offset-3\">\r\n\t\t\t\t\t<Accordion defaultActiveKey=\"1\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{staff.name}({staff.id})\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span style={{ paddingInline: 300 }}>{props.type}</span>\r\n\t\t\t\t\t\t\t\t<span>{props.status}</span>\r\n\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t<dl class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t{props.type === \"sick\" ||\r\n\t\t\t\t\t\t\t\t\t\t\tprops.type === \"maternity\" ||\r\n\t\t\t\t\t\t\t\t\t\t\t(props.type === \"accidental\" && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">Target day</dt>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{props.targetDay}</dd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{props.type === \"changeDayOff\" && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">New day off</dt>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{getDay(props.newDayOff)}</dd>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">Issue date</dt>\r\n\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{props.issueDate}</dd>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{(props.type === \"replacement\" || props.type === \"slotLinking\") && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">{props.type}</dt>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{renderReplacment()}</dd>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{props.type === \"compensation\" && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">Compensated</dt>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{props.compensated.type}</dd>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<dt class=\"col-sm-3\">sender comment</dt>\r\n\t\t\t\t\t\t\t\t\t\t<dd class=\"col-sm-9\">{props.senderComment}</dd>\r\n\t\t\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"col col-6\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"light\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleShow1}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={disable()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAccept request\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"col col-6\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"light\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleShow2}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={disable()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tReject request\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showAccept}\r\n\t\t\t\tonHide={handleClose1}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Accept Request</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetComment(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\t\ttype=\"comment\"\r\n\t\t\t\t\t\tplaceholder=\"Enter comment\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tEnter message to sender if you want\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose1}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetShowAccept(false);\r\n\t\t\t\t\t\t\tprops.handleAccept(props._id, comment);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showReject}\r\n\t\t\t\tonHide={handleClose2}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Reject request</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetComment(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\t\ttype=\"comment\"\r\n\t\t\t\t\t\tplaceholder=\"Enter comment\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tEnter message to sender if you want\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose2}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetShowReject(false);\r\n\t\t\t\t\t\t\tprops.handleReject(props._id, comment);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tReject\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Request;\r\n","C:\\Users\\ahmed\\OneDrive\\Documents\\GitHub\\guc-portal\\client\\src\\components\\ViewStaff.js",["250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"259","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"255","severity":1,"message":"260","line":14,"column":9,"nodeType":"257","messageId":"258","endLine":14,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":91,"column":3,"nodeType":"263","messageId":"264","endLine":91,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"259","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":14},{"ruleId":"255","severity":1,"message":"265","line":15,"column":10,"nodeType":"257","messageId":"258","endLine":15,"endColumn":25},{"ruleId":"255","severity":1,"message":"266","line":15,"column":27,"nodeType":"257","messageId":"258","endLine":15,"endColumn":45},{"ruleId":"255","severity":1,"message":"267","line":17,"column":3,"nodeType":"257","messageId":"258","endLine":17,"endColumn":10},{"ruleId":"268","severity":1,"message":"269","line":104,"column":17,"nodeType":"270","endLine":104,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":120,"column":17,"nodeType":"270","endLine":120,"endColumn":53},{"ruleId":"255","severity":1,"message":"271","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"272","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":19},{"ruleId":"255","severity":1,"message":"273","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":12},{"ruleId":"274","severity":1,"message":"275","line":24,"column":6,"nodeType":"276","endLine":24,"endColumn":8,"suggestions":"277"},{"ruleId":"255","severity":1,"message":"256","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"259","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":14},{"ruleId":"255","severity":1,"message":"278","line":24,"column":8,"nodeType":"257","messageId":"258","endLine":24,"endColumn":19},{"ruleId":"255","severity":1,"message":"279","line":36,"column":9,"nodeType":"257","messageId":"258","endLine":36,"endColumn":10},{"ruleId":"268","severity":1,"message":"269","line":56,"column":5,"nodeType":"270","endLine":56,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":57,"column":5,"nodeType":"270","endLine":57,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":58,"column":5,"nodeType":"270","endLine":58,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":59,"column":5,"nodeType":"270","endLine":59,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":64,"column":6,"nodeType":"270","endLine":64,"endColumn":39},{"ruleId":"255","severity":1,"message":"259","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"274","severity":1,"message":"275","line":37,"column":6,"nodeType":"276","endLine":37,"endColumn":8,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"269","line":57,"column":9,"nodeType":"270","endLine":65,"endColumn":10},{"ruleId":"281","severity":1,"message":"282","line":61,"column":13,"nodeType":"283","messageId":"284","endLine":63,"endColumn":14},{"ruleId":"274","severity":1,"message":"285","line":76,"column":5,"nodeType":"276","endLine":76,"endColumn":20,"suggestions":"286"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":38,"column":6,"nodeType":"276","endLine":38,"endColumn":8,"suggestions":"287"},{"ruleId":"255","severity":1,"message":"288","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":36,"column":6,"nodeType":"276","endLine":36,"endColumn":20,"suggestions":"289"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":34,"column":6,"nodeType":"276","endLine":34,"endColumn":8,"suggestions":"290"},{"ruleId":"255","severity":1,"message":"288","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"271","line":2,"column":28,"nodeType":"257","messageId":"258","endLine":2,"endColumn":37},{"ruleId":"255","severity":1,"message":"291","line":14,"column":11,"nodeType":"257","messageId":"258","endLine":14,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":33,"column":12,"nodeType":"276","endLine":33,"endColumn":14,"suggestions":"292"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":32,"column":12,"nodeType":"276","endLine":32,"endColumn":14,"suggestions":"293"},{"ruleId":"255","severity":1,"message":"288","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"271","line":2,"column":28,"nodeType":"257","messageId":"258","endLine":2,"endColumn":37},{"ruleId":"255","severity":1,"message":"291","line":16,"column":11,"nodeType":"257","messageId":"258","endLine":16,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":33,"column":12,"nodeType":"276","endLine":33,"endColumn":14,"suggestions":"294"},{"ruleId":"255","severity":1,"message":"288","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"271","line":2,"column":28,"nodeType":"257","messageId":"258","endLine":2,"endColumn":37},{"ruleId":"255","severity":1,"message":"295","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":23},{"ruleId":"255","severity":1,"message":"291","line":14,"column":11,"nodeType":"257","messageId":"258","endLine":14,"endColumn":15},{"ruleId":"255","severity":1,"message":"271","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"296","line":17,"column":10,"nodeType":"257","messageId":"258","endLine":17,"endColumn":17},{"ruleId":"255","severity":1,"message":"288","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":26},{"ruleId":"255","severity":1,"message":"271","line":2,"column":28,"nodeType":"257","messageId":"258","endLine":2,"endColumn":37},{"ruleId":"255","severity":1,"message":"291","line":15,"column":11,"nodeType":"257","messageId":"258","endLine":15,"endColumn":15},{"ruleId":"274","severity":1,"message":"297","line":59,"column":5,"nodeType":"276","endLine":59,"endColumn":7,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":62,"column":3,"nodeType":"301","messageId":"302","endLine":77,"endColumn":4},{"ruleId":"255","severity":1,"message":"303","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":13},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'openNav' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'notificationNum' is assigned a value but never used.","'setNotificationNum' is assigned a value but never used.","'classes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'StaffMember' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'handleShowA' is assigned a value but never used.","'l' is assigned a value but never used.",["307"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'props' and 'user.token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["308"],["309"],"'NavBar' is defined but never used.",["310"],["311"],"'user' is assigned a value but never used.",["312"],["313"],["314"],"'getterFetcher' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.replacement.courseId', 'props.replacement.locationId', 'props.senderId', 'props.slotLinking.courseId', 'props.slotLinking.locationId', 'props.type', and 'user.token'. Either include them or remove the dependency array.",["315"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"316","fix":"318"},{"desc":"319","fix":"320"},{"desc":"316","fix":"321"},{"desc":"322","fix":"323"},{"desc":"316","fix":"324"},{"desc":"316","fix":"325"},{"desc":"316","fix":"326"},{"desc":"316","fix":"327"},{"desc":"328","fix":"329"},"Update the dependencies array to be: [user.token]",{"range":"330","text":"331"},{"range":"332","text":"331"},"Update the dependencies array to be: [props, props.courses, user.token]",{"range":"333","text":"334"},{"range":"335","text":"331"},"Update the dependencies array to be: [props.office, user.token]",{"range":"336","text":"337"},{"range":"338","text":"331"},{"range":"339","text":"331"},{"range":"340","text":"331"},{"range":"341","text":"331"},"Update the dependencies array to be: [props.replacement.courseId, props.replacement.locationId, props.senderId, props.slotLinking.courseId, props.slotLinking.locationId, props.type, user.token]",{"range":"342","text":"343"},[704,706],"[user.token]",[1133,1135],[2422,2437],"[props, props.courses, user.token]",[1323,1325],[1182,1196],"[props.office, user.token]",[1138,1140],[1165,1167],[1098,1100],[1143,1145],[1858,1860],"[props.replacement.courseId, props.replacement.locationId, props.senderId, props.slotLinking.courseId, props.slotLinking.locationId, props.type, user.token]"]